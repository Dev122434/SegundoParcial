
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OperacionesCrudMaestro", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OperacionesCrudMaestro {


    /**
     * 
     * @return
     *     returns java.util.List<ws.Profesor>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readsProfesores", targetNamespace = "http://ws/", className = "ws.ReadsProfesores")
    @ResponseWrapper(localName = "readsProfesoresResponse", targetNamespace = "http://ws/", className = "ws.ReadsProfesoresResponse")
    @Action(input = "http://ws/OperacionesCrudMaestro/readsProfesoresRequest", output = "http://ws/OperacionesCrudMaestro/readsProfesoresResponse")
    public List<Profesor> readsProfesores();

    /**
     * 
     * @param profesor
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateProfesor", targetNamespace = "http://ws/", className = "ws.UpdateProfesor")
    @ResponseWrapper(localName = "updateProfesorResponse", targetNamespace = "http://ws/", className = "ws.UpdateProfesorResponse")
    @Action(input = "http://ws/OperacionesCrudMaestro/updateProfesorRequest", output = "http://ws/OperacionesCrudMaestro/updateProfesorResponse")
    public String updateProfesor(
        @WebParam(name = "profesor", targetNamespace = "")
        Profesor profesor);

    /**
     * 
     * @param clave
     * @return
     *     returns ws.Profesor
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readProfesor", targetNamespace = "http://ws/", className = "ws.ReadProfesor")
    @ResponseWrapper(localName = "readProfesorResponse", targetNamespace = "http://ws/", className = "ws.ReadProfesorResponse")
    @Action(input = "http://ws/OperacionesCrudMaestro/readProfesorRequest", output = "http://ws/OperacionesCrudMaestro/readProfesorResponse")
    public Profesor readProfesor(
        @WebParam(name = "clave", targetNamespace = "")
        String clave);

    /**
     * 
     * @param profesor
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProfesor", targetNamespace = "http://ws/", className = "ws.CreateProfesor")
    @ResponseWrapper(localName = "createProfesorResponse", targetNamespace = "http://ws/", className = "ws.CreateProfesorResponse")
    @Action(input = "http://ws/OperacionesCrudMaestro/createProfesorRequest", output = "http://ws/OperacionesCrudMaestro/createProfesorResponse")
    public String createProfesor(
        @WebParam(name = "profesor", targetNamespace = "")
        Profesor profesor);

    /**
     * 
     * @param clave
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteProfesor", targetNamespace = "http://ws/", className = "ws.DeleteProfesor")
    @ResponseWrapper(localName = "deleteProfesorResponse", targetNamespace = "http://ws/", className = "ws.DeleteProfesorResponse")
    @Action(input = "http://ws/OperacionesCrudMaestro/deleteProfesorRequest", output = "http://ws/OperacionesCrudMaestro/deleteProfesorResponse")
    public String deleteProfesor(
        @WebParam(name = "clave", targetNamespace = "")
        String clave);

}
